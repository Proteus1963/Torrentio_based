const languageMapping = {
  'dubbed': 'Dubbed',
  'multi audio': 'Multi Audio',
  'multi subs': 'Multi Subs',
  'dual audio': 'Dual Audio',
  'english': 'ðŸ‡¬ðŸ‡§',
  'japanese': 'ðŸ‡¯ðŸ‡µ',
  'russian': 'ðŸ‡·ðŸ‡º',
  'portuguese': 'ðŸ‡µðŸ‡¹',
  'spanish': 'ðŸ‡ªðŸ‡¸',
  'italian': 'ðŸ‡®ðŸ‡¹',
  'korean': 'ðŸ‡°ðŸ‡·',
  'chinese': 'ðŸ‡¨ðŸ‡³',
  'french': 'ðŸ‡«ðŸ‡·',
  'german': 'ðŸ‡©ðŸ‡ª',
  'dutch': 'ðŸ‡³ðŸ‡±',
  'hindi': 'ðŸ‡®ðŸ‡³',
  'telugu': 'ðŸ‡®ðŸ‡³',
  'tamil': 'ðŸ‡®ðŸ‡³',
  'polish': 'ðŸ‡µðŸ‡±',
  'lithuanian': 'ðŸ‡±ðŸ‡¹',
  'czech': 'ðŸ‡¨ðŸ‡¿',
  'slovakian': 'ðŸ‡¸ðŸ‡°',
  'hungarian': 'ðŸ‡­ðŸ‡º',
  'romanian': 'ðŸ‡·ðŸ‡´',
  'croatian': 'ðŸ‡­ðŸ‡·',
  'ukrainian': 'ðŸ‡ºðŸ‡¦',
  'greek': 'ðŸ‡¬ðŸ‡·',
  'danish': 'ðŸ‡©ðŸ‡°',
  'finnish': 'ðŸ‡«ðŸ‡®',
  'swedish': 'ðŸ‡¸ðŸ‡ª',
  'norwegian': 'ðŸ‡³ðŸ‡´',
  'turkish': 'ðŸ‡¹ðŸ‡·',
  'arabic': 'ðŸ‡¸ðŸ‡¦',
  'persian': 'ðŸ‡®ðŸ‡·',
  'hebrew': 'ðŸ‡®ðŸ‡±',
  'vietnamese': 'ðŸ‡»ðŸ‡³',
  'indonesian': 'ðŸ‡®ðŸ‡©',
  'thai': 'ðŸ‡¹ðŸ‡­'
}
const languages = Object.keys(languageMapping).slice(4);

function mapLanguages(languages) {
  const mapped = languages
      .map(language => languageMapping[language])
      .filter(language => language)
      .sort((a, b) => Object.values(languageMapping).indexOf(a) - Object.values(languageMapping).indexOf(b));
  const unmapped = languages
      .filter(language => !languageMapping[language])
      .sort((a, b) => a.localeCompare(b))
  return [...new Set([].concat(mapped).concat(unmapped))];
}

function containsLanguage(stream, language) {
  return stream.title.includes(languageMapping[language]);
}

module.exports = { mapLanguages, containsLanguage, languages }